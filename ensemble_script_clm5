#!/bin/bash

# Clone latest development branch from CTSM repository
#git clone --origin escomp https://github.com/ESCOMP/ctsm.git ctsm_ParamEns
#cd ctsm_ParamEns
#git checkout -b ctsm_ParamEns master
#./manage_externals/checkout_externals

#export CODENAME="clm5.0"
export CODENAME="ctsm_ParamEns"
export NAME="hydro_ensemble"

# Set number of sample cases
niter=10
echo "number of samples = "$niter

export USER="kdagon"

cd /glade/p/work/$USER/$CODENAME
pwd

cd cime/scripts
pwd

## create experiment directory (first time only)
mkdir $NAME
##

cd $NAME
pwd

## Base build: UNCOMMENT THIS THE FIRST TIME YOU RUN SCRIPT
rm -rf codebase_$NAME
rm -rf /glade/scratch/$USER/codebase_$NAME
../create_newcase --run-unsupported --compset I2000Clm50Sp  --res f45_f45 --case codebase_$NAME --project P08010000

cd codebase_$NAME 
pwd
./case.setup
qcmd -- ./case.build

cd ..
##

##control run: uncomment this for a simulation with default values
# also serves as an equilibrium test
#export EXPTNAME=${NAME}0

#remove existing output
#rm -rf /glade/scratch/$USER/$EXPTNAME
#rm -rf /glade/scratch/$USER/archive/$EXPTNAME

#remove existing working directories                                                                                                                  
#rm -rf $EXPTNAME

#../create_newcase --run-unsupported --compset I2000Clm50Sp --res f45_f45 --case $EXPTNAME --project P08010000

#cd $EXPTNAME

#./xmlchange JOB_QUEUE=regular
#./xmlchange JOB_WALLCLOCK_TIME=6:00:00 

#./xmlchange NTASKS_CPL=-4                                                                                                                   
#./xmlchange NTASKS_OCN=-4
#./xmlchange NTASKS_WAV=-4
#./xmlchange NTASKS_GLC=-4
#./xmlchange NTASKS_ICE=-4
#./xmlchange NTASKS_ROF=-4
#./xmlchange NTASKS_LND=-4

#./xmlchange CONTINUE_RUN=FALSE
#./xmlchange RESUBMIT=0
#./xmlchange STOP_N=30
#./xmlchange STOP_OPTION=nyears

#./xmlchange BUILD_COMPLETE="TRUE"
#./xmlchange EXEROOT="/glade/scratch/$USER/codebase_$NAME/bld"

#./xmlchange DATM_CLMNCEP_YR_START=2000
#./xmlchange DATM_CLMNCEP_YR_END=2004

# modify wallclock, project, queue as necessary
# to change mail options; this works with Cheyenne only:
#./xmlchange --file env_batch.xml --subgroup case.run --id BATCH_COMMAND_FLAGS --val '-m abe -l walltime=6:00:00 -A P08010000 -q regular'

# case.setup (creates user_nl_* files)
#./case.setup

# submit case
#./case.submit
##

# create array of parameter names
# in the future, could try and read these in from a text file
declare -a param=("medlynslope" "dleaf" "kmax" "fff" "dint" "baseflow_scalar")
np=${#param[@]}

i=1
while [ $i -le $niter ]
do

echo "Starting case "$i" of "$niter

export EXPTNAME=${NAME}_$i
echo $EXPTNAME

#remove existing output
rm -rf /glade/scratch/$USER/$EXPTNAME
rm -rf /glade/scratch/$USER/archive/$EXPTNAME

#remove existing working directories
rm -rf $EXPTNAME

../create_newcase --run-unsupported --compset I2000Clm50Sp --res f45_f45 --case $EXPTNAME --project P08010000

cd $EXPTNAME

./xmlchange JOB_QUEUE=regular
./xmlchange JOB_WALLCLOCK_TIME=4:00:00

./xmlchange NTASKS_CPL=-4
./xmlchange NTASKS_OCN=-4
./xmlchange NTASKS_WAV=-4
./xmlchange NTASKS_GLC=-4
./xmlchange NTASKS_ICE=-4
./xmlchange NTASKS_ROF=-4
./xmlchange NTASKS_LND=-4

./xmlchange CONTINUE_RUN=FALSE
./xmlchange RESUBMIT=0
./xmlchange STOP_N=20
./xmlchange STOP_OPTION=nyears

./xmlchange BUILD_COMPLETE="TRUE"
./xmlchange EXEROOT="/glade/scratch/$USER/codebase_$NAME/bld"

./xmlchange DATM_CLMNCEP_YR_START=2000
./xmlchange DATM_CLMNCEP_YR_END=2004

# modify wallclock, project, queue as necessary
# to change mail options; this works with Cheyenne only:
#./xmlchange --file env_batch.xml --subgroup case.run --id BATCH_COMMAND_FLAGS --val '-m abe -l walltime=4:00:00 -A P08010000 -q regular'

# case.setup (creates user_nl_* files)
./case.setup

# add output history fields if desired, e.g.:
#echo "hist_fincl1='GPP'" >> user_nl_clm

# execute python script to read parameter values
python LHC.py # doesn't save output
python LHC.py 1> LHC # write output to LHC file (but how to read it in bash?)
my_array=( $(python LHC.py) ) # captures only first bit
OUTPUT=($(python LHC.py | tr -d '[],'))
echo ${OUTPUT[0]} # doesn't quite read the first value

# generate param files for PFT-dependent params
# Read in default CLM params file from /glade/p/cesmdata/cseg/inputdata/lnd/clm2/paramdata/clm5_params.c171117.nc
# Make changes
# Write out new copy to location below
uclm="paramfile='/glade/u/home/$USER/pft_files/hydro_ensemble_LHC/${EXPTNAME}.nc'"               
echo  $uclm >> user_nl_clm

# if not PFT-dependent, edit the namelist appropriately
# need to import LHC to read parameter values
j=4
while [ $j -le $np ]
do
python LHC.py $i-1 >> user_nl_clm
(( j++ ))
done

./case.submit

cd ../

(( i++ ))
done
